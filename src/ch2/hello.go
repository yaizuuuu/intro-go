// ファイルに存在する変数と関数は必ずパッケージに所属する
// ここではmainというパッケージに所属している
// また、1つのファイルに記述できるのは単一のパッケージのみ
// つまり、このファイルはmainパッケージのみについて記述できる
package main

// Goは不要な宣言をしているとコンパイルエラーになる
// パッケージをインポートしたにも関わらず使用していない場合はコンパイルエラーが発生する
import (
	"fmt"
	// 使用されないパッケージを強制的にプログラム内に組み込む機能も用意されている
	// この機能により使用されないパッケージをインポートしてもコンパイルエラーにはならない
	// 試行錯誤中で一旦パッケージを使用しないなどコードを組み換えを柔軟に行っている場合はこのように逃げるのもあり
	// _ "fmt"
)

// 単一パッケージを読み込む場合はこちらの記述もできる
//import "fmt"

// エントリーポイント
// main関数が実行される
func main() {
	fmt.Println("Hello, World!")
}

// go buildでコンパイルができる
// go build -o hell hello.go
// -oオプションでコンパイル後のファイル名を指定できる

// コンパイル後のファイルはこんな簡単なプログラムでも約2MBと大きいサイズになる
// OSに依存しないようにGoのランタイムの本体(ガベージコレクションの機能とかも)と指定したパッケージの機能すべてが実行ファイルに組み込まれる